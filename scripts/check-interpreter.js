const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkInterpreter() {
  try {
    console.log('üîç Checking for interpreter accounts...\n');
    
    const interpreters = await prisma.user.findMany({
      where: {
        role: 'INTERPRETER'
      },
      include: {
        interpreterProfile: {
          include: {
            credentials: true,
            languages: true,
            specializations: true,
          }
        }
      }
    });

    if (interpreters.length === 0) {
      console.log('‚ùå No interpreter accounts found in the database.');
      return;
    }

    console.log(`‚úÖ Found ${interpreters.length} interpreter account(s):\n`);

    for (const interpreter of interpreters) {
      console.log(`üìß Email: ${interpreter.email}`);
      console.log(`üë§ Name: ${interpreter.name}`);
      console.log(`üÜî User ID: ${interpreter.id}`);
      
      if (interpreter.interpreterProfile) {
        const profile = interpreter.interpreterProfile;
        console.log(`üìã Profile ID: ${profile.id}`);
        console.log(`‚≠ê Status: ${profile.status}`);
        console.log(`‚úÖ Verified: ${profile.isVerified}`);
        
        if (profile.credentials) {
          const cred = profile.credentials;
          console.log(`üîë Has temp password: ${!!cred.tempPassword}`);
          console.log(`üé´ Has login token: ${!!cred.loginToken}`);
          console.log(`üÜï Is first login: ${cred.isFirstLogin}`);
          console.log(`‚è∞ Token expires: ${cred.tokenExpiry}`);
          console.log(`üïê Last login: ${cred.lastLoginAt}`);
          
          if (cred.loginToken) {
            console.log(`\nüîê LOGIN CREDENTIALS:`);
            console.log(`Token: ${cred.loginToken}`);
          }
        }
        
        console.log(`üåê Languages: ${profile.languages.map(l => `${l.languageName} (${l.proficiency})`).join(', ')}`);
        console.log(`üéØ Specializations: ${profile.specializations.map(s => s.specialization).join(', ')}`);
      }
      
      console.log(`\n${'='.repeat(60)}\n`);
    }
    
  } catch (error) {
    console.error('‚ùå Error checking interpreters:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkInterpreter();
